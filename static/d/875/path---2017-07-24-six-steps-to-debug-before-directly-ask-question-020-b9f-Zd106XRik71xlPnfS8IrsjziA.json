{"data":{"content":{"edges":[{"node":{"id":"127f794b-f764-5abd-81e8-26424d4572b8","html":"<h2 id=\"組件\"><a href=\"#%E7%B5%84%E4%BB%B6\" aria-label=\"組件 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>組件</h2>\n<p><code class=\"language-text\">React</code>提供<code class=\"language-text\">React.Component</code>，我們可以透過使用組件，拆分 UI 為可以重複使用的獨立部分。<code class=\"language-text\">React.Component</code>是一個抽象的 base class。我們甚少直接運用<code class=\"language-text\">React.Component</code>，通常是透過創建一個子類，並使用<code class=\"language-text\">render()</code>方法。</p>\n<p>例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>如果你不選擇使用 ES6，你可以使用模組<code class=\"language-text\">create-react-class</code>。你可以參考<a href=\"https://facebook.github.io/react/docs/react-without-es6.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Without ES6</a>。\n下面這一段和 ES6 的寫法效果一樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Greeting <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"組件生命週期\"><a href=\"#%E7%B5%84%E4%BB%B6%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F\" aria-label=\"組件生命週期 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>組件生命週期</h2>\n<p>每一個組件都會有幾個生命週期的方法，你可以在程序運行的指定時間，透過覆蓋他們來運行特定代碼。對於這些方法，我們會用<code class=\"language-text\">will-</code>來表示它會在某些事情發生之前的一刻被調用，而<code class=\"language-text\">did-</code>則是表示它會在某些事情發生之後的一刻被調用。本文會細說加載組件中發生了什麼事情。</p>\n<h3 id=\"加載-mounting\"><a href=\"#%E5%8A%A0%E8%BC%89-mounting\" aria-label=\"加載 mounting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加載 (Mounting)</h3>\n<ol>\n<li><code class=\"language-text\">constructor()</code></li>\n<li><code class=\"language-text\">componentWillMount()</code></li>\n<li><code class=\"language-text\">render()</code></li>\n<li><code class=\"language-text\">componentDidMount()</code></li>\n</ol>\n<h3 id=\"更新-updating\"><a href=\"#%E6%9B%B4%E6%96%B0-updating\" aria-label=\"更新 updating permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更新 (Updating)</h3>\n<p>當 props 或者 state 更新的時候，下面這些方法會被調用：</p>\n<ol>\n<li>componentWillReceiveProps()</li>\n<li>shouldComponentUpdate()</li>\n<li>componentWillUpdate()</li>\n<li>render()</li>\n<li>componentDidUpdate()</li>\n</ol>\n<h3 id=\"斷開連接-unmounting\"><a href=\"#%E6%96%B7%E9%96%8B%E9%80%A3%E6%8E%A5-unmounting\" aria-label=\"斷開連接 unmounting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>斷開連接 (Unmounting)</h3>\n<p>當組件脫離 DOM 的時候，下面這個方法回被調用：</p>\n<ol>\n<li>componentWillUnmount()</li>\n</ol>\n<h3 id=\"其他內置方法\"><a href=\"#%E5%85%B6%E4%BB%96%E5%85%A7%E7%BD%AE%E6%96%B9%E6%B3%95\" aria-label=\"其他內置方法 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他內置方法</h3>\n<ol>\n<li>setState()</li>\n<li>forceUpdate()</li>\n</ol>\n<p>我們會在下文討論一下 React 是如何加載組件。</p>\n<p>{% img /img/react-mount.svg 300 auto React LifeCycle Mount %}</p>\n<h4 id=\"constructor\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor()</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>在 React 加載組件之前，它會調用<code class=\"language-text\">constructor</code>。你可以在<code class=\"language-text\">constructor</code>中去賦予組件的初始<code class=\"language-text\">state</code>。如果你使用<code class=\"language-text\">props</code>創造初始<code class=\"language-text\">state</code>的話，這也是可以接受的。這會很有效地<code class=\"language-text\">fork</code>組件的<code class=\"language-text\">props</code>，然後賦予初始<code class=\"language-text\">state</code>的值。</p>\n<p>有效的<code class=\"language-text\">constructor</code>例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    color<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>initialColor\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id=\"注意事項\"><a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\" aria-label=\"注意事項 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意事項</h5>\n<ol>\n<li>如果你不需要賦予初始<code class=\"language-text\">state</code>，你不需要在 React 的組件中植入<code class=\"language-text\">constructor</code>。</li>\n<li>當你使用在<code class=\"language-text\">React.Component</code>的子類中加載<code class=\"language-text\">constructor()</code>方法時，你應該第一時間調用<code class=\"language-text\">super(props)</code>，而不是在任何 statement 之後。不然，我們獲取<code class=\"language-text\">this.props</code>值的時候，它會是<code class=\"language-text\">undefined</code>。</li>\n<li>在一些類似上面的例子，<code class=\"language-text\">state</code>未必會及時與任何的<code class=\"language-text\">props</code>更新。如果你需要同步<code class=\"language-text\">state</code>的話，你其實是想要<a href=\"https://facebook.github.io/react/docs/lifting-state-up.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lift the state up</a>。</li>\n</ol>\n<h4 id=\"componentwillmount\"><a href=\"#componentwillmount\" aria-label=\"componentwillmount permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentWillMount()</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>它會在組件<code class=\"language-text\">render()</code>之前執行一次，然後不能再執行。如果在這裡定義了<code class=\"language-text\">setState</code>方法，頁面只會在加載之前更新一次，不會重複渲染。React 官方推薦使用<code class=\"language-text\">constructor()</code>代替這個方法。</p>\n<h4 id=\"render\"><a href=\"#render\" aria-label=\"render permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>render()</h4>\n<p><code class=\"language-text\">React.Component</code>必須有這個方法，即使你返回<code class=\"language-text\">null</code>，或者<code class=\"language-text\">false</code>。當你返回<code class=\"language-text\">null</code>，或者<code class=\"language-text\">false</code>的時候，<code class=\"language-text\">ReactDOM.findDOMNode(this)</code> 會返回<code class=\"language-text\">null</code>。</p>\n<p>當它被調用的時候，它會檢查<code class=\"language-text\">this.props</code>和<code class=\"language-text\">this.state</code>，然後返回一個單獨的 React 元素。這個元素會是一個純正的<code class=\"language-text\">DOM</code>組件，例如<div />，或者自定義的 composite 組件。</p>\n<h5 id=\"注意事項-1\"><a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85-1\" aria-label=\"注意事項 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意事項</h5>\n<ol>\n<li><code class=\"language-text\">render()</code>方法應該是<code class=\"language-text\">pure</code>：它不會改寫任何組件的<code class=\"language-text\">state</code>。每一次調用它都會返回同樣的結果。它不會直接接觸到瀏覽器層面。</li>\n<li>如果你需要接觸到瀏覽器層面，你應該在<code class=\"language-text\">componentDidMount()</code>或者其他生命週期方法中接觸瀏覽器。</li>\n<li>保持<code class=\"language-text\">render()</code>方法 pure 來讓組件更加容易被人理解。</li>\n</ol>\n<h4 id=\"componentdidmount\"><a href=\"#componentdidmount\" aria-label=\"componentdidmount permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentDidMount()</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>它會在組件加載之後執行一次。如果你的初始程序需要 DOM nodes，你應該在這裡寫。如果你需要從其他地方加載資料，這裡也是一個不錯的地方去執行網絡請求。如果在這裡定義了<code class=\"language-text\">setState</code>方法，會觸發重複渲染。</p>\n<h4 id=\"測試代碼\"><a href=\"#%E6%B8%AC%E8%A9%A6%E4%BB%A3%E7%A2%BC\" aria-label=\"測試代碼 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>測試代碼</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">_log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">method<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'constructor'</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'render'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'componentWillMount'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'componentDidMount'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Greeting name<span class=\"token operator\">=</span><span class=\"token string\">\"Calpa\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Console Output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&quot;constructor&quot; Object {\n  name: &quot;Calpa&quot;\n}\n&quot;componentWillMount&quot; undefined\n&quot;render&quot; &quot;Calpa&quot;\n&quot;componentDidMount&quot; undefined</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>你可以在<a href=\"https://codepen.io/calpa/full/xdJrQm/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CodePen</a>中獲取，並測試這段代碼。</p>\n<p>不知道拿哪一張當封面好。。。</p>","tableOfContents":"<ul>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#%E7%B5%84%E4%BB%B6\">組件</a></li>\n<li>\n<p><a href=\"/2017/05/16/react-component-lifecycle/#%E7%B5%84%E4%BB%B6%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F\">組件生命週期</a></p>\n<ul>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#%E5%8A%A0%E8%BC%89-mounting\">加載 (Mounting)</a></li>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#%E6%9B%B4%E6%96%B0-updating\">更新 (Updating)</a></li>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#%E6%96%B7%E9%96%8B%E9%80%A3%E6%8E%A5-unmounting\">斷開連接 (Unmounting)</a></li>\n<li>\n<p><a href=\"/2017/05/16/react-component-lifecycle/#%E5%85%B6%E4%BB%96%E5%85%A7%E7%BD%AE%E6%96%B9%E6%B3%95\">其他內置方法</a></p>\n<ul>\n<li>\n<p><a href=\"/2017/05/16/react-component-lifecycle/#constructor\">constructor()</a></p>\n<ul>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\">注意事項</a></li>\n</ul>\n</li>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#componentwillmount\">componentWillMount()</a></li>\n<li>\n<p><a href=\"/2017/05/16/react-component-lifecycle/#render\">render()</a></p>\n<ul>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85-1\">注意事項</a></li>\n</ul>\n</li>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#componentdidmount\">componentDidMount()</a></li>\n<li><a href=\"/2017/05/16/react-component-lifecycle/#%E6%B8%AC%E8%A9%A6%E4%BB%A3%E7%A2%BC\">測試代碼</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","excerpt":"組件提供，我們可以透過使用組件，拆分 UI 為可以重複使用的獨立部分。是一個抽象的 base class。我們甚少直接運用，通常是透過創建一個子類，並使用方法。例子：如果你不選擇使用 ES6，你可以使用模組。你可以參考React Without ES6。\n下面這一段和 ES…","fields":{"slug":"/2017/05/16/react-component-lifecycle/"},"frontmatter":{"id":"20181022a","title":"React 組件生命週期 - 加載組件","slug":"/2017/05/16/react-component-lifecycle/","date":"2017-05-16T03:48:03.125Z","headerImage":null}},"previous":null,"next":null}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"fc5ad13b-800a-58f0-8bc9-171f638d01c8","index":32}}