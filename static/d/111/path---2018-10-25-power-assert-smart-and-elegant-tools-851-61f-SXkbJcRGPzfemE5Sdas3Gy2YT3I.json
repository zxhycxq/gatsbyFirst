{"data":{"content":{"edges":[{"node":{"id":"b7c90709-d57e-5b64-b71a-cf97b8a349ed","html":"<h2 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>在寫測試代碼時，以往我們需要翻閱文檔，學習各種 API 才能明白如何操作斷言。而現在我們可以透過 power-assert 的 assert 方法來減輕調試壓力。不僅如此，它還提供更加直觀，具體的運行效果，幫助 DEBUG。寫測試代碼，其實可以很容易。</p>\n<h3 id=\"例子\"><a href=\"#%E4%BE%8B%E5%AD%90\" aria-label=\"例子 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>例子</h3>\n<p>power-assert 提供的 assert 方法，已經滿足日常的斷言需求。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">describe<span class=\"token punctuation\">(</span><span class=\"token string\">'Array'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    beforeEach<span class=\"token punctuation\">(</span>function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        this.ary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>1, 2, 3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    describe<span class=\"token punctuation\">(</span><span class=\"token string\">'#indexOf()'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        it<span class=\"token punctuation\">(</span><span class=\"token string\">'應該返回 index 如果值存在的話'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            var zero <span class=\"token operator\">=</span> 0, two <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\n            assert<span class=\"token punctuation\">(</span>this.ary.indexOf<span class=\"token punctuation\">(</span>zero<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token operator\">=</span> two<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        it<span class=\"token punctuation\">(</span><span class=\"token string\">'應該返回 -1 如果值不存在的話'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            var minusOne <span class=\"token operator\">=</span> -1, two <span class=\"token operator\">=</span> 2<span class=\"token punctuation\">;</span>\n            assert.ok<span class=\"token punctuation\">(</span>this.ary.indexOf<span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token operator\">=</span> minusOne, <span class=\"token string\">'THIS IS AN ASSERTION MESSAGE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndescribe<span class=\"token punctuation\">(</span><span class=\"token string\">'String.slice()'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    it<span class=\"token punctuation\">(</span><span class=\"token string\">'提取字段的某個部分，並返回一個新的字段'</span>, <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        var str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"The morning is upon us.\"</span><span class=\"token punctuation\">;</span>\n        var str2 <span class=\"token operator\">=</span> str1.slice<span class=\"token punctuation\">(</span>4, -2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        assert<span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">==</span><span class=\"token operator\">=</span> str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>結果如下：</p>\n<p><img src=\"https://i.imgur.com/3IhJ1Co.jpg\" alt=\"Imgur\"></p>\n<p>從 power-assert 中，你可以很直觀地知道到底哪個地方的值是和預想中的不同，比如說第一段測試代碼裡面的 <code class=\"language-text\">indexOf()</code> 方法，你可以看出 power-assert 指出左側的 <code class=\"language-text\">[number] this.ary.indexOf(zero)</code> 返回了 <code class=\"language-text\">-1</code>，而右側則的 <code class=\"language-text\">[string] two</code> 則返回了 \"2\"。</p>\n<p>更加到位的是：power-assert 對於每一個運行的操作都有所指出，例如 this.ary 只有 [1,2,3]，zero 是 0（雖然代碼寫得很清楚）。</p>\n<blockquote>\n<p>如果有複雜的測試需求，你可以封裝它們為獨立的方法，然後組合到一起。</p>\n</blockquote>\n<p>你可以把以上代碼，複製貼上到官網提供的 <a href=\"https://azu.github.io/power-assert-demo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">power-assert playground</a>，從而看到 power-assert 的效果。</p>\n<h2 id=\"快速入門\"><a href=\"#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%96%80\" aria-label=\"快速入門 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>快速入門</h2>\n<p>如果你在使用 <code class=\"language-text\">assert</code> 的話，你無需使用 <code class=\"language-text\">require(&#39;power-assert&#39;)</code>，Power Assert 會自動進行轉換。</p>\n<p>Power Assert 有著和 assert 一模一樣的 API，也就是說，你可以隨時，無痛轉換兩者。</p>\n<h3 id=\"安裝\"><a href=\"#%E5%AE%89%E8%A3%9D\" aria-label=\"安裝 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安裝</h3>\n<p>如果你的運行環境是只有 Node.js 的話，那麼你可以運行以下代碼來安裝。</p>\n<p><code class=\"language-text\">npm install --save-dev mocha power-assert intelli-espower-loader</code></p>\n<p>然後運行 mocha 來測試你的代碼：</p>\n<p><code class=\"language-text\">npx mocha --require intelli-espower-loader</code></p>\n<p>那麼你就可以看到你的 assert 現在提供了很多實用的提示信息了。</p>\n<h3 id=\"配置方法\"><a href=\"#%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95\" aria-label=\"配置方法 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置方法</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">配置組合</th>\n<th align=\"left\">環境</th>\n<th align=\"left\">技術棧</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/azu/power-assert-node-seed\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">power-assert-node-seed</a></td>\n<td align=\"left\">Node.js</td>\n<td align=\"left\">power-assert + <a href=\"https://github.com/power-assert-js/intelli-espower-loader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">intelli-espower-loader</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/azu/power-assert-testem-seed\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">power-assert-testem-seed</a></td>\n<td align=\"left\">Browsers(<a href=\"https://github.com/testem/testem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">testem</a> 驅動)</td>\n<td align=\"left\">power-assert + <a href=\"https://github.com/power-assert-js/gulp-espower\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gulp-espower</a> + <a href=\"https://github.com/airportyh/testem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">testem</a>.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/azu/power-assert-karma-seed\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">power-assert-karma-seed</a></td>\n<td align=\"left\">Browsers(<a href=\"https://karma-runner.github.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Karma</a> 驅動)</td>\n<td align=\"left\">power-assert + <a href=\"https://github.com/power-assert-js/espowerify\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">espowerify</a> + <a href=\"http://browserify.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">browserify</a> + <a href=\"https://karma-runner.github.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Karma</a>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"深入配置\"><a href=\"#%E6%B7%B1%E5%85%A5%E9%85%8D%E7%BD%AE\" aria-label=\"深入配置 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>深入配置</h3>\n<p><img src=\"https://i.imgur.com/eZLHc2w.png\" alt=\"Imgur\"></p>\n<p>它支持 babel, browserify, webpack, grunt, gulp 等前端現代化開發工具，並支持 TypeScript（帶類型定義），CoffeeScript。</p>\n<p>如果你有試過其他的代碼測試工具，例如<code class=\"language-text\">chai</code>, <code class=\"language-text\">should.js</code>, <code class=\"language-text\">expect.js</code>, 的話，Power Assert 提供了代碼遷移工具。</p>\n<p>你可以透過以下的組合來配置你的工程的 power-assert：</p>\n<ol>\n<li><code class=\"language-text\">power-assert</code> + <code class=\"language-text\">espower-loader</code>  或  <code class=\"language-text\">intelli-espower-loader</code> : 簡單、官方推薦的配置方法，雖然這個方法只能在 Node.js 環境下運行。</li>\n<li><code class=\"language-text\">power-assert</code> + <code class=\"language-text\">Babel</code> + <code class=\"language-text\">babel-preset-power-assert</code>: 如果你使用 <a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Babel 6 以上的版本</a>，那麼這會是唯一可行的配置方法。</li>\n<li><code class=\"language-text\">power-assert</code> + <code class=\"language-text\">espower-coffee</code> or <code class=\"language-text\">espower-typescript</code>: 一個 AltJS 配搭 power-assert 的配置方法，官方同樣推薦，但這個方法只能在 Node.js 環境下運行。</li>\n<li><code class=\"language-text\">power-assert</code> + <code class=\"language-text\">browserify</code> + <code class=\"language-text\">espowerify</code>: 如果你使用 browserify 而不是 Babel 的話，你可以使用這個方法。</li>\n<li><code class=\"language-text\">power-assert</code> + <code class=\"language-text\">webpack</code> + <code class=\"language-text\">webpack-espower-loader</code>: 如果你使用的是 webpack 而不是 Babel 的話，你可以使用這個配置方法。</li>\n<li><code class=\"language-text\">power-assert</code> + <code class=\"language-text\">espower-cli</code> or <code class=\"language-text\">grunt-espower</code> or <code class=\"language-text\">gulp-espower</code> : 這個方法會產生一段可以到處運行的代碼。</li>\n</ol>\n<p>如果你以上的組合都不想用的話，那麼你可以使用 <a href=\"https://github.com/power-assert-js/espower-cli\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">espower-cli</a> 來產生一代可以讓 power-assert 運行的測試代碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g espower-cli\nespower test/some_test.js <span class=\"token operator\">></span> build/test/some_test.js</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2 id=\"後記\"><a href=\"#%E5%BE%8C%E8%A8%98\" aria-label=\"後記 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>後記</h2>\n<p>其實早在 2014 年，已經有一位名叫 Takuto Wada 的日本程序員分享過 <a href=\"https://www.slideshare.net/t_wada/power-assert-nodefest-2014\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">關於 power-asset 的 PPT</a>。雖然版本有點過時，但是基本上大同小異。</p>\n<p><img src=\"https://i.imgur.com/VQQnd2y.jpg\" alt=\"Imgur\"></p>\n<p><img src=\"https://i.imgur.com/kkpG7j9.jpg\" alt=\"Imgur\"></p>\n<p>我最近嘗試一個新的開發模式，Test Driven Development (TDD) ﹣ 測試驅動開發，也就是說如何可以隨心所欲地重構代碼而不讓它崩潰。</p>\n<p>如果你有興趣了解<a href=\"https://github.com/calpa/tdd-playground\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這種開發模式</a>的話，你可以繼續<a href=\"https://github.com/calpa/calpa.github.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">關注我的文章</a>，點 watch 按鈕 (+ Star)，謝謝。</p>\n<h2 id=\"參考資料\"><a href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99\" aria-label=\"參考資料 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>參考資料</h2>\n<ol>\n<li><a href=\"https://github.com/power-assert-js/power-assert\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">power-assert-js/power-assert</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/25956323\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">可能是最好的 JS Assert 库 - 皇帝的新衣 - 天猪</a></li>\n<li><a href=\"https://www.slideshare.net/t_wada/power-assert-nodefest-2014\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">power-assert, mechanism and philosophy（日文 PPT）</a></li>\n</ol>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E5%89%8D%E8%A8%80\">前言</a></p>\n<ul>\n<li><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E4%BE%8B%E5%AD%90\">例子</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%96%80\">快速入門</a></p>\n<ul>\n<li><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E5%AE%89%E8%A3%9D\">安裝</a></li>\n<li><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95\">配置方法</a></li>\n<li><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E6%B7%B1%E5%85%A5%E9%85%8D%E7%BD%AE\">深入配置</a></li>\n</ul>\n</li>\n<li><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E5%BE%8C%E8%A8%98\">後記</a></li>\n<li><a href=\"/2018/10/25/power-assert-smart-and-elegant-tools/#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99\">參考資料</a></li>\n</ul>","excerpt":"前言在寫測試代碼時，以往我們需要翻閱文檔，學習各種 API 才能明白如何操作斷言。而現在我們可以透過 power-assert 的 assert 方法來減輕調試壓力。不僅如此，它還提供更加直觀，具體的運行效果，幫助 DEBUG。寫測試代碼，其實可以很容易。例子power…","fields":{"slug":"/2018/10/25/power-assert-smart-and-elegant-tools/"},"frontmatter":{"id":"20181025a","title":"power assert － 更智能、優雅的全方位 assert 斷言庫","slug":"/2018/10/25/power-assert-smart-and-elegant-tools/","date":"2018-10-25T03:48:03.125Z","headerImage":null}},"previous":null,"next":null}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"b7c90709-d57e-5b64-b71a-cf97b8a349ed","index":13}}